[{"/Users/gonzalober/projects2/alpha-finance/src/App.js":"1","/Users/gonzalober/projects2/alpha-finance/src/index.js":"2","/Users/gonzalober/projects2/alpha-finance/src/components/StockRow.js":"3","/Users/gonzalober/projects2/alpha-finance/src/components/useFetch.js":"4","/Users/gonzalober/projects2/alpha-finance/src/services/Api/iex.js":"5","/Users/gonzalober/projects2/alpha-finance/src/components/StockChart.js":"6","/Users/gonzalober/projects2/alpha-finance/src/components/PortPerfor.js":"7","/Users/gonzalober/projects2/alpha-finance/src/components/PortOptimization.js":"8","/Users/gonzalober/projects2/alpha-finance/src/components/Auth/Login.js":"9","/Users/gonzalober/projects2/alpha-finance/src/components/Auth/SignUp.js":"10"},{"size":753,"mtime":1615974529611,"results":"11","hashOfConfig":"12"},{"size":221,"mtime":1610122172303,"results":"13","hashOfConfig":"12"},{"size":2399,"mtime":1613727740809,"results":"14","hashOfConfig":"12"},{"size":839,"mtime":1609885944964,"results":"15","hashOfConfig":"12"},{"size":8078,"mtime":1613407419324,"results":"16","hashOfConfig":"12"},{"size":2352,"mtime":1615903772152,"results":"17","hashOfConfig":"12"},{"size":2873,"mtime":1613407419323,"results":"18","hashOfConfig":"12"},{"size":3038,"mtime":1613407419322,"results":"19","hashOfConfig":"12"},{"size":2447,"mtime":1615974934915,"results":"20","hashOfConfig":"12"},{"size":2874,"mtime":1615903746882,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cunlqk",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/gonzalober/projects2/alpha-finance/src/App.js",["50"],"/Users/gonzalober/projects2/alpha-finance/src/index.js",[],["51","52"],"/Users/gonzalober/projects2/alpha-finance/src/components/StockRow.js",[],["53","54"],"/Users/gonzalober/projects2/alpha-finance/src/components/useFetch.js",[],["55","56"],"/Users/gonzalober/projects2/alpha-finance/src/services/Api/iex.js",[],"/Users/gonzalober/projects2/alpha-finance/src/components/StockChart.js",["57"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { file } from \"./aapl.csv\";\nconst d3 = require(\"d3\");\n//import * as _ from \"lodash\";\n\nexport default function StockRow() {\n  //const data = Object.entries(iex.base_url).map(([key, value]) => value.chart.map((x) => x.close)[0] );\n  const [data, setData] = useState([\n    {\n      date: \"24/02/2016\",\n      value: 10,\n    },\n    {\n      date: \"26/02/2016\",\n      value: 22,\n    },\n    {\n      date: \"20/03/2016\",\n      value: 15,\n    },\n  ]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    let margin = { top: 20, right: 30, bottom: 30, left: 40 };\n    let height = 500;\n    let width = 150;\n\n    let line = d3\n      .line()\n      .defined((d) => !isNaN(d.value))\n      .x((d) => x(d.date))\n      .y((d) => y(d.value));\n\n    let x = d3\n      .scaleUtc()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, width - margin.right]);\n    let y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, (d) => d.value)])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    let xAxis = (g) =>\n      g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n        d3\n          .axisBottom(x)\n          .ticks(width / 80)\n          .tickSizeOuter(0)\n      );\n\n    let yAxis = (g) =>\n      g\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y))\n        .call((g) => g.select(\".domain\").remove())\n        .call((g) =>\n          g\n            .select(\".tick:last-of-type text\")\n            .clone()\n            .attr(\"x\", 3)\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(data.y)\n        );\n\n    const svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n\n    svg.append(\"g\").call(xAxis);\n\n    svg.append(\"g\").call(yAxis);\n\n    svg\n      .append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", line);\n\n    return svg.node();\n  }, [data]);\n\n  return (\n    <div>\n      <h2>Charts</h2>\n      <p>Enter the ticker: </p>\n      <svg ref={svgRef}></svg>\n      <button onClick={() => setData(data.map((value) => value + 5))}>\n        Update Ticker\n      </button>\n    </div>\n  );\n}\n","/Users/gonzalober/projects2/alpha-finance/src/components/PortPerfor.js",["58","59","60","61","62","63","64","65","66","67","68"],"import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { useFetch } from \"./useFetch.js\";\nimport { useState, useEffect } from \"react\";\nimport { iex } from \"../services/Api/iex\";\n\nconst TickerTable = ({ tickers, tickerSearch }) => {\n  if (tickers) {\n    const tickersArray = [];\n    for (const keyTicker in tickers) {\n      tickersArray.push(keyTicker);\n    }\n\n    return (\n      <div>\n        <label>{tickersArray}</label>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default function StockRow() {\n  const [table, setTable] = useState([]);\n  const [stockChartXvalues, setStockChartXvalues] = useState([]);\n  const [stockChartYvalues, setStockChartYvalues] = useState([]);\n  const { data, loading } = useFetch(iex.base_url);\n  let stockSymbol = \"GOOG\";\n  const { bla, blablable } = useFetch(\n    `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${stockSymbol}&types=chart&range=1m&last=5&token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23`\n  );\n  const { dataStats, loadingStats } = useFetch(\n    \"https://cloud.iexapis.com/stable/stock/goog/stats?token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23\"\n  );\n\n  const border = {\n    borderColor: \"grey\",\n    marginBottom: \"20px\",\n  };\n\n  const DisplayStats = () => {\n    if (dataStats) {\n      console.log(\"----\");\n      console.log(dataStats);\n      return dataStats.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.week52high}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  const DisplayInfo = () => {\n    console.log(table);\n    if (data) {\n      console.log(data);\n      return table.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.chart[0].close}</td>\n          <td>{value.chart[0].marketChangeOverTime}</td>\n          <td>\n            {value.chart[0].week52high}lo{value.chart[0].week52low}\n          </td>\n          <td>{value.chart[0].date}</td>\n          <td>{value.chart[0].updated}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  function tickerSearch(input) {\n    console.log(input);\n    if (data) {\n      console.log(data);\n      let stockFiltered = Object.entries(data).filter((key) => key === input);\n\n      console.log(stockFiltered);\n      setTable(stockFiltered);\n    }\n  }\n\n  return (\n    <div>\n      <h2>Portfolio Performance</h2>\n      <h5>For equal-weight portfolio </h5>\n      <TickerTable tickers={data} tickerSearch={tickerSearch} />\n      <Plot\n        data={[\n          {\n            x: [1, 2, 3],\n            y: [2, 6, 3],\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: { color: \"red\" },\n          },\n          { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n        ]}\n        layout={{ width: 320, height: 240, title: \"A Fancy Plot\" }}\n      />\n    </div>\n  );\n}\n",["69","70"],"/Users/gonzalober/projects2/alpha-finance/src/components/PortOptimization.js",["71","72","73","74","75","76","77","78","79","80","81"],"import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { useFetch } from \"./useFetch.js\";\nimport { useState, useEffect } from \"react\";\nimport { iex } from \"../services/Api/iex\";\n\nconst TickerTable = ({ tickers, tickerSearch }) => {\n  if (tickers) {\n    const tickersArray = [];\n    for (const keyTicker in tickers) {\n      tickersArray.push(keyTicker);\n    }\n\n    return (\n      <div>\n        <label>{tickersArray}</label>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default function StockRow() {\n  const [table, setTable] = useState([]);\n  const [stockChartXvalues, setStockChartXvalues] = useState([]);\n  const [stockChartYvalues, setStockChartYvalues] = useState([]);\n  const { data, loading } = useFetch(iex.base_url);\n  let stockSymbol = \"GOOG\";\n  const { bla, blablable } = useFetch(\n    `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${stockSymbol}&types=chart&range=1m&last=5&token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23`\n  );\n  const { dataStats, loadingStats } = useFetch(\n    \"https://cloud.iexapis.com/stable/stock/goog/stats?token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23\"\n  );\n\n  const border = {\n    borderColor: \"grey\",\n    marginBottom: \"20px\",\n  };\n\n  const DisplayStats = () => {\n    if (dataStats) {\n      console.log(\"----\");\n      console.log(dataStats);\n      return dataStats.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.week52high}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  const DisplayInfo = () => {\n    console.log(table);\n    if (data) {\n      console.log(data);\n      return table.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.chart[0].close}</td>\n          <td>{value.chart[0].marketChangeOverTime}</td>\n          <td>\n            {value.chart[0].week52high}lo{value.chart[0].week52low}\n          </td>\n          <td>{value.chart[0].date}</td>\n          <td>{value.chart[0].updated}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  function tickerSearch(input) {\n    console.log(input);\n    if (data) {\n      console.log(data);\n      let stockFiltered = Object.entries(data).filter((key) => key === input);\n\n      console.log(stockFiltered);\n      setTable(stockFiltered);\n    }\n  }\n\n  return (\n    <div>\n      <h4>Portfolio Optimization</h4>\n      <h5>\n        For practical purposes the optimization is based in two scenarios: 1 -\n        Minimun Var Port. 2 - Max Return\n      </h5>\n      <h5>1- Portfolio allocation for minimun risk target </h5>\n      <TickerTable tickers={data} tickerSearch={tickerSearch} />\n      <Plot\n        data={[\n          {\n            x: [1, 2, 3],\n            y: [2, 6, 3],\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: { color: \"red\" },\n          },\n          { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n        ]}\n        layout={{ width: 320, height: 240, title: \"A Fancy Plot\" }}\n      />\n    </div>\n  );\n}\n",["82","83"],"/Users/gonzalober/projects2/alpha-finance/src/components/Auth/Login.js",[],"/Users/gonzalober/projects2/alpha-finance/src/components/Auth/SignUp.js",[],{"ruleId":"84","severity":1,"message":"85","line":2,"column":42,"nodeType":"86","messageId":"87","endLine":2,"endColumn":48},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"88","replacedBy":"94"},{"ruleId":"90","replacedBy":"95"},{"ruleId":"84","severity":1,"message":"96","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":14},{"ruleId":"84","severity":1,"message":"97","line":4,"column":20,"nodeType":"86","messageId":"87","endLine":4,"endColumn":29},{"ruleId":"84","severity":1,"message":"98","line":26,"column":10,"nodeType":"86","messageId":"87","endLine":26,"endColumn":27},{"ruleId":"84","severity":1,"message":"99","line":26,"column":29,"nodeType":"86","messageId":"87","endLine":26,"endColumn":49},{"ruleId":"84","severity":1,"message":"100","line":27,"column":10,"nodeType":"86","messageId":"87","endLine":27,"endColumn":27},{"ruleId":"84","severity":1,"message":"101","line":27,"column":29,"nodeType":"86","messageId":"87","endLine":27,"endColumn":49},{"ruleId":"84","severity":1,"message":"102","line":28,"column":17,"nodeType":"86","messageId":"87","endLine":28,"endColumn":24},{"ruleId":"84","severity":1,"message":"103","line":30,"column":11,"nodeType":"86","messageId":"87","endLine":30,"endColumn":14},{"ruleId":"84","severity":1,"message":"104","line":30,"column":16,"nodeType":"86","messageId":"87","endLine":30,"endColumn":25},{"ruleId":"84","severity":1,"message":"105","line":33,"column":22,"nodeType":"86","messageId":"87","endLine":33,"endColumn":34},{"ruleId":"84","severity":1,"message":"106","line":42,"column":9,"nodeType":"86","messageId":"87","endLine":42,"endColumn":21},{"ruleId":"84","severity":1,"message":"107","line":57,"column":9,"nodeType":"86","messageId":"87","endLine":57,"endColumn":20},{"ruleId":"88","replacedBy":"108"},{"ruleId":"90","replacedBy":"109"},{"ruleId":"84","severity":1,"message":"97","line":4,"column":20,"nodeType":"86","messageId":"87","endLine":4,"endColumn":29},{"ruleId":"84","severity":1,"message":"98","line":26,"column":10,"nodeType":"86","messageId":"87","endLine":26,"endColumn":27},{"ruleId":"84","severity":1,"message":"99","line":26,"column":29,"nodeType":"86","messageId":"87","endLine":26,"endColumn":49},{"ruleId":"84","severity":1,"message":"100","line":27,"column":10,"nodeType":"86","messageId":"87","endLine":27,"endColumn":27},{"ruleId":"84","severity":1,"message":"101","line":27,"column":29,"nodeType":"86","messageId":"87","endLine":27,"endColumn":49},{"ruleId":"84","severity":1,"message":"102","line":28,"column":17,"nodeType":"86","messageId":"87","endLine":28,"endColumn":24},{"ruleId":"84","severity":1,"message":"103","line":30,"column":11,"nodeType":"86","messageId":"87","endLine":30,"endColumn":14},{"ruleId":"84","severity":1,"message":"104","line":30,"column":16,"nodeType":"86","messageId":"87","endLine":30,"endColumn":25},{"ruleId":"84","severity":1,"message":"105","line":33,"column":22,"nodeType":"86","messageId":"87","endLine":33,"endColumn":34},{"ruleId":"84","severity":1,"message":"106","line":42,"column":9,"nodeType":"86","messageId":"87","endLine":42,"endColumn":21},{"ruleId":"84","severity":1,"message":"107","line":57,"column":9,"nodeType":"86","messageId":"87","endLine":57,"endColumn":20},{"ruleId":"88","replacedBy":"110"},{"ruleId":"90","replacedBy":"111"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],["112"],["113"],"'file' is defined but never used.","'useEffect' is defined but never used.","'stockChartXvalues' is assigned a value but never used.","'setStockChartXvalues' is assigned a value but never used.","'stockChartYvalues' is assigned a value but never used.","'setStockChartYvalues' is assigned a value but never used.","'loading' is assigned a value but never used.","'bla' is assigned a value but never used.","'blablable' is assigned a value but never used.","'loadingStats' is assigned a value but never used.","'DisplayStats' is assigned a value but never used.","'DisplayInfo' is assigned a value but never used.",["112"],["113"],["112"],["113"],"no-global-assign","no-unsafe-negation"]