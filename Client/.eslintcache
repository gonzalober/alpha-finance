[{"/Users/gonzalober/projects2/alpha-finance/Client/src/index.js":"1","/Users/gonzalober/projects2/alpha-finance/Client/src/components/StockChart.js":"2","/Users/gonzalober/projects2/alpha-finance/Client/src/components/PortOptimization.js":"3","/Users/gonzalober/projects2/alpha-finance/Client/src/components/useFetch.js":"4","/Users/gonzalober/projects2/alpha-finance/Client/src/services/Api/iex.js":"5","/Users/gonzalober/projects2/alpha-finance/Client/src/components/Auth/Login.js":"6","/Users/gonzalober/projects2/alpha-finance/Client/src/App.js":"7","/Users/gonzalober/projects2/alpha-finance/Client/src/components/StockRow.js":"8","/Users/gonzalober/projects2/alpha-finance/Client/src/components/PortPerfor.js":"9","/Users/gonzalober/projects2/alpha-finance/Client/src/components/Auth/SignUp.js":"10"},{"size":221,"mtime":1610122172303,"results":"11","hashOfConfig":"12"},{"size":2354,"mtime":1616547539316,"results":"13","hashOfConfig":"12"},{"size":3038,"mtime":1613407419322,"results":"14","hashOfConfig":"12"},{"size":839,"mtime":1609885944964,"results":"15","hashOfConfig":"12"},{"size":8078,"mtime":1613407419324,"results":"16","hashOfConfig":"12"},{"size":2563,"mtime":1616604823770,"results":"17","hashOfConfig":"12"},{"size":930,"mtime":1616605901404,"results":"18","hashOfConfig":"12"},{"size":2399,"mtime":1613727740809,"results":"19","hashOfConfig":"12"},{"size":2873,"mtime":1613407419323,"results":"20","hashOfConfig":"12"},{"size":2869,"mtime":1616602297557,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1opqxwv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/gonzalober/projects2/alpha-finance/Client/src/index.js",[],["45","46"],"/Users/gonzalober/projects2/alpha-finance/Client/src/components/StockChart.js",[],"/Users/gonzalober/projects2/alpha-finance/Client/src/components/PortOptimization.js",["47","48","49","50","51","52","53","54","55","56","57"],"import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { useFetch } from \"./useFetch.js\";\nimport { useState, useEffect } from \"react\";\nimport { iex } from \"../services/Api/iex\";\n\nconst TickerTable = ({ tickers, tickerSearch }) => {\n  if (tickers) {\n    const tickersArray = [];\n    for (const keyTicker in tickers) {\n      tickersArray.push(keyTicker);\n    }\n\n    return (\n      <div>\n        <label>{tickersArray}</label>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default function StockRow() {\n  const [table, setTable] = useState([]);\n  const [stockChartXvalues, setStockChartXvalues] = useState([]);\n  const [stockChartYvalues, setStockChartYvalues] = useState([]);\n  const { data, loading } = useFetch(iex.base_url);\n  let stockSymbol = \"GOOG\";\n  const { bla, blablable } = useFetch(\n    `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${stockSymbol}&types=chart&range=1m&last=5&token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23`\n  );\n  const { dataStats, loadingStats } = useFetch(\n    \"https://cloud.iexapis.com/stable/stock/goog/stats?token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23\"\n  );\n\n  const border = {\n    borderColor: \"grey\",\n    marginBottom: \"20px\",\n  };\n\n  const DisplayStats = () => {\n    if (dataStats) {\n      console.log(\"----\");\n      console.log(dataStats);\n      return dataStats.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.week52high}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  const DisplayInfo = () => {\n    console.log(table);\n    if (data) {\n      console.log(data);\n      return table.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.chart[0].close}</td>\n          <td>{value.chart[0].marketChangeOverTime}</td>\n          <td>\n            {value.chart[0].week52high}lo{value.chart[0].week52low}\n          </td>\n          <td>{value.chart[0].date}</td>\n          <td>{value.chart[0].updated}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  function tickerSearch(input) {\n    console.log(input);\n    if (data) {\n      console.log(data);\n      let stockFiltered = Object.entries(data).filter((key) => key === input);\n\n      console.log(stockFiltered);\n      setTable(stockFiltered);\n    }\n  }\n\n  return (\n    <div>\n      <h4>Portfolio Optimization</h4>\n      <h5>\n        For practical purposes the optimization is based in two scenarios: 1 -\n        Minimun Var Port. 2 - Max Return\n      </h5>\n      <h5>1- Portfolio allocation for minimun risk target </h5>\n      <TickerTable tickers={data} tickerSearch={tickerSearch} />\n      <Plot\n        data={[\n          {\n            x: [1, 2, 3],\n            y: [2, 6, 3],\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: { color: \"red\" },\n          },\n          { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n        ]}\n        layout={{ width: 320, height: 240, title: \"A Fancy Plot\" }}\n      />\n    </div>\n  );\n}\n","/Users/gonzalober/projects2/alpha-finance/Client/src/components/useFetch.js",[],"/Users/gonzalober/projects2/alpha-finance/Client/src/services/Api/iex.js",[],"/Users/gonzalober/projects2/alpha-finance/Client/src/components/Auth/Login.js",[],"/Users/gonzalober/projects2/alpha-finance/Client/src/App.js",["58"],"/Users/gonzalober/projects2/alpha-finance/Client/src/components/StockRow.js",[],"/Users/gonzalober/projects2/alpha-finance/Client/src/components/PortPerfor.js",["59","60","61","62","63","64","65","66","67","68","69"],"import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { useFetch } from \"./useFetch.js\";\nimport { useState, useEffect } from \"react\";\nimport { iex } from \"../services/Api/iex\";\n\nconst TickerTable = ({ tickers, tickerSearch }) => {\n  if (tickers) {\n    const tickersArray = [];\n    for (const keyTicker in tickers) {\n      tickersArray.push(keyTicker);\n    }\n\n    return (\n      <div>\n        <label>{tickersArray}</label>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default function StockRow() {\n  const [table, setTable] = useState([]);\n  const [stockChartXvalues, setStockChartXvalues] = useState([]);\n  const [stockChartYvalues, setStockChartYvalues] = useState([]);\n  const { data, loading } = useFetch(iex.base_url);\n  let stockSymbol = \"GOOG\";\n  const { bla, blablable } = useFetch(\n    `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${stockSymbol}&types=chart&range=1m&last=5&token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23`\n  );\n  const { dataStats, loadingStats } = useFetch(\n    \"https://cloud.iexapis.com/stable/stock/goog/stats?token=pk_b4e7d7d3cfb1485cb2fc5dbc6f3f9f23\"\n  );\n\n  const border = {\n    borderColor: \"grey\",\n    marginBottom: \"20px\",\n  };\n\n  const DisplayStats = () => {\n    if (dataStats) {\n      console.log(\"----\");\n      console.log(dataStats);\n      return dataStats.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.week52high}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  const DisplayInfo = () => {\n    console.log(table);\n    if (data) {\n      console.log(data);\n      return table.map(([key, value]) => (\n        <tr style={border} key={key}>\n          <td>{key}</td>\n          <td>{value.chart[0].close}</td>\n          <td>{value.chart[0].marketChangeOverTime}</td>\n          <td>\n            {value.chart[0].week52high}lo{value.chart[0].week52low}\n          </td>\n          <td>{value.chart[0].date}</td>\n          <td>{value.chart[0].updated}</td>\n        </tr>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  function tickerSearch(input) {\n    console.log(input);\n    if (data) {\n      console.log(data);\n      let stockFiltered = Object.entries(data).filter((key) => key === input);\n\n      console.log(stockFiltered);\n      setTable(stockFiltered);\n    }\n  }\n\n  return (\n    <div>\n      <h2>Portfolio Performance</h2>\n      <h5>For equal-weight portfolio </h5>\n      <TickerTable tickers={data} tickerSearch={tickerSearch} />\n      <Plot\n        data={[\n          {\n            x: [1, 2, 3],\n            y: [2, 6, 3],\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: { color: \"red\" },\n          },\n          { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n        ]}\n        layout={{ width: 320, height: 240, title: \"A Fancy Plot\" }}\n      />\n    </div>\n  );\n}\n","/Users/gonzalober/projects2/alpha-finance/Client/src/components/Auth/SignUp.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":20,"nodeType":"76","messageId":"77","endLine":4,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":26,"column":10,"nodeType":"76","messageId":"77","endLine":26,"endColumn":27},{"ruleId":"74","severity":1,"message":"79","line":26,"column":29,"nodeType":"76","messageId":"77","endLine":26,"endColumn":49},{"ruleId":"74","severity":1,"message":"80","line":27,"column":10,"nodeType":"76","messageId":"77","endLine":27,"endColumn":27},{"ruleId":"74","severity":1,"message":"81","line":27,"column":29,"nodeType":"76","messageId":"77","endLine":27,"endColumn":49},{"ruleId":"74","severity":1,"message":"82","line":28,"column":17,"nodeType":"76","messageId":"77","endLine":28,"endColumn":24},{"ruleId":"74","severity":1,"message":"83","line":30,"column":11,"nodeType":"76","messageId":"77","endLine":30,"endColumn":14},{"ruleId":"74","severity":1,"message":"84","line":30,"column":16,"nodeType":"76","messageId":"77","endLine":30,"endColumn":25},{"ruleId":"74","severity":1,"message":"85","line":33,"column":22,"nodeType":"76","messageId":"77","endLine":33,"endColumn":34},{"ruleId":"74","severity":1,"message":"86","line":42,"column":9,"nodeType":"76","messageId":"77","endLine":42,"endColumn":21},{"ruleId":"74","severity":1,"message":"87","line":57,"column":9,"nodeType":"76","messageId":"77","endLine":57,"endColumn":20},{"ruleId":"74","severity":1,"message":"88","line":2,"column":42,"nodeType":"76","messageId":"77","endLine":2,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":4,"column":20,"nodeType":"76","messageId":"77","endLine":4,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":26,"column":10,"nodeType":"76","messageId":"77","endLine":26,"endColumn":27},{"ruleId":"74","severity":1,"message":"79","line":26,"column":29,"nodeType":"76","messageId":"77","endLine":26,"endColumn":49},{"ruleId":"74","severity":1,"message":"80","line":27,"column":10,"nodeType":"76","messageId":"77","endLine":27,"endColumn":27},{"ruleId":"74","severity":1,"message":"81","line":27,"column":29,"nodeType":"76","messageId":"77","endLine":27,"endColumn":49},{"ruleId":"74","severity":1,"message":"82","line":28,"column":17,"nodeType":"76","messageId":"77","endLine":28,"endColumn":24},{"ruleId":"74","severity":1,"message":"83","line":30,"column":11,"nodeType":"76","messageId":"77","endLine":30,"endColumn":14},{"ruleId":"74","severity":1,"message":"84","line":30,"column":16,"nodeType":"76","messageId":"77","endLine":30,"endColumn":25},{"ruleId":"74","severity":1,"message":"85","line":33,"column":22,"nodeType":"76","messageId":"77","endLine":33,"endColumn":34},{"ruleId":"74","severity":1,"message":"86","line":42,"column":9,"nodeType":"76","messageId":"77","endLine":42,"endColumn":21},{"ruleId":"74","severity":1,"message":"87","line":57,"column":9,"nodeType":"76","messageId":"77","endLine":57,"endColumn":20},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'stockChartXvalues' is assigned a value but never used.","'setStockChartXvalues' is assigned a value but never used.","'stockChartYvalues' is assigned a value but never used.","'setStockChartYvalues' is assigned a value but never used.","'loading' is assigned a value but never used.","'bla' is assigned a value but never used.","'blablable' is assigned a value but never used.","'loadingStats' is assigned a value but never used.","'DisplayStats' is assigned a value but never used.","'DisplayInfo' is assigned a value but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]